Pulumi.dev.yaml : It's the actual stack configuration, Pulumi stores our configuration in the source code.
What about secrets?
Pulumi can encrypt secrets and store those in the repository.

if we wan to store secrets we can use : 

pulumi config set "hi-chat" "hello-world"

To create a new stack 
pulumi stack init 

pulumi stack ls : it will show us the stacks in the repository and * beside the current stack that we are using.

To select an existing one:
pulumi stack select dev

index.ts :


To enject secrets we use : secrets -- aws s3 ls

to run pulumi : 
pulumi up

secrets -- pulumi up 

pulumi up handles secrets according to your Pulumi project's configuration, secrets -- pulumi up suggests a more explicit approach to managing secrets during the deployment process.


Resources directory: Raw resources that will going to be reused over and over again.
Service Directory: services use resources.

First we will be setup a base of resources and then we want to create services that are reusable like a frontend services,or backend. 

Pulumi components (Equal to terraform models):

Pulumi allows you to take a series of resources and logiclly group them into a component resource.

example: 

class MyComponent extends pulumi.ComponentResource {
    constructor(name: string, opts: pulumi.ComponentResourceOptions) {
        super("pkg:index:MyComponent", name, {}, opts);
    }
}

767397999502
AKIA3FLD4GOHAALEWSK4
UP3lOpXjidq5X2np3FEq/MX6boe3VYb7ZiptE2AP


The backend :

https://eu-central-1.console.aws.amazon.com/ecs/v2/clusters?region=eu-central-1#

